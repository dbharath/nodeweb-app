{
  "name": "magickwand",
  "description": "native bindings for imagemagick convert",
  "version": "0.0.7",
  "author": {
    "name": "Qasim Zaidi",
    "email": "qasim@zaidi.me"
  },
  "contributors": [
    {
      "name": "Sameer Akhtar"
    },
    {
      "name": "Binayak Mishra"
    }
  ],
  "dependencies": {},
  "repository": {
    "type": "git",
    "url": "git://github.com/qzaidi/magickwand.git"
  },
  "main": "index",
  "bugs": {
    "url": "https://github.com/qzaidi/magickwand/issues"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "engines": {
    "node": ">=0.6.0"
  },
  "scripts": {
    "install": "node-gyp rebuild"
  },
  "gypfile": true,
  "readme": "magickwand\n==========\n\nNative bindings for imagemagick to resize and compress images. This can be used to dynamically resize images in an express/connect based server. See [examples/cdn.js](https://github.com/qzaidi/magickwand/blob/master/examples/cdn.js) for an example of connect middleware using magickwand.\n\nMost other modules exposing imagemagick invoke the convert utility as a child process, instead of making direct C API calls. While this works, API calls are much faster than invoking convert, and that is the motivation for this module.\n\nExample\n-------\n\n``` js\nvar magickwand = require('magickwand');\nvar fs = require('fs');\n\nmagickwand.resize('<pathtoimagefile>', { width: 300, height: 200, quality: 80 } ,function(err,data) {\n  fs.writeFile('/tmp/def.jpg',data,\"binary\");\n});\n```\n\nTo maintain aspect ratio while resizing, set one of the width/height parameters to 0. The callback is passed an info \nargument that has the width/height of the newly resized image, and is useful in case you chose to preserve the aspect\nratio\n\n```\nmagickwand.resize('<pathtoimagefile>', { width: 100 },function(err,data,info) {\n  fs.writeFile('/tmp/def.jpg',data,\"binary\");\n  console.log('new height is ' + info.height);\n});\n```\n\nTo convert to another supported format, use the format argument\n\n```\nmagickwand.resize('<pathtoimagefile>', { format: 'png', width: 300, height: 250 },function(err,data) {\n  fs.writeFile('/tmp/def.jpg',data,\"binary\");\n});\n```\n\nSee examples/cdn.js on how to use this module as a middleware in connect.\n\nRequirements\n------------\n\nmagickwand uses the C library by the same name, so libmagickwand-dev should be installed. \n\nOn Ubuntu, for example\n\n``` bash\nsudo apt-get install libmagickwand-dev\n```\n\nOn Mac - you can use homebrew to install imagemagick.\n\n```bash\nbrew install pkg-config\nbrew install imagemagick  --disable-openmp\n```\n\nI had trouble using the default recipe for imagemagick, as openmp would cause node process to hang.\nMake sure you have disabled openmp while building Imagemagick.If you use homebrew, use the --disable-openmp \noption while installing imagemagick.\n\nOn SmartOS, install using pkgin\n\n```bash\npkgin ImageMagick\n```\n\nInstallation\n------------\n\n``` bash\n$ npm install magickwand\n```\n\nSource Install / Manual Compilation\n-----------------------------------\n\n``` bash\n$ git clone git://github.com/qzaidi/magickwand.git\n$ node-gyp configure build\n```\n",
  "_id": "magickwand@0.0.7",
  "dist": {
    "shasum": "4501415e21af83602a9eddb0f9055846384295cb"
  },
  "_from": "magickwand@=0.0.7"
}
